<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net5.0;netstandard2.1;net40</TargetFrameworks>
    <LangVersion>9.0</LangVersion>
    <Nullable>enable</Nullable>
    <NeutralLanguage>en</NeutralLanguage>
    <!-- nuget-Package: -->
    <PackageId>FolkerKinzel.Contacts.IO</PackageId>
    <Product>FolkerKinzel.Contacts.IO</Product>
    <Version>1.3.1</Version>
    <FileVersion>1.3.0.19</FileVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <PackageReleaseNotes>Updates the dependencies and makes use of the new features of FolkerKinzel.Contacts and FolkerKinzel.VCards.
    
Fixes an issue, that CsvWriter might crash if the TimeStamp of a Contact object is not explicitely set.

SaveVCard and LoadVCard have been replaced by SaveVcf and LoadVcf to have a more consistent naming. Existing code will still compile and run but will give you Obsolete warnings when using the old naming.

Passing an undefined enum value as VCardVersion will cause an ArgumentException.</PackageReleaseNotes>
    <PackageTags>.net vcf csv vcard contact c#</PackageTags>
    <Description>.NET-API to manage contact data of organizations and natural persons, including a data model and classes to persist it as vCard (*.vcf) or CSV.</Description>
    <Authors>Folker Kinzel</Authors>
    <Copyright>Copyright Â© 2020 Folker Kinzel</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageIcon>Logo.png</PackageIcon>
    <RepositoryUrl>https://github.com/FolkerKinzel/Contacts.IO.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/FolkerKinzel/Contacts.IO</PackageProjectUrl>
  </PropertyGroup>
  <!-- ðŸ‘‡ disable the nullable warnings when compiling for .NET Standard 2.0 -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <NoWarn>$(NoWarn);8600;8601;8602;8603;8604</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Translations\**" />
    <EmbeddedResource Remove="Translations\**" />
    <None Remove="Translations\**" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="CsvMappingCollection.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="FolkerKinzel.Contacts" Version="1.4.1" />
    <PackageReference Include="FolkerKinzel.CsvTools" Version="1.5.0" />
    <PackageReference Include="FolkerKinzel.VCards" Version="2.1.0" />
    <PackageReference Include="Nullable" Version="1.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Resources\Res.de.resx">
      <SubType>Designer</SubType>
      <Generator></Generator>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\Res.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Res.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\..\Nuget-Logo\Logo.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\.editorconfig" Link=".editorconfig" />
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="if $(ConfigurationName) == Release copy /v /b /y &quot;$(OutDir)$(ProjectName).xml&quot; &quot;$(OutDir)de/$(ProjectName).xml&quot;&#xD;&#xA;if $(ConfigurationName) == Release if '$(TargetFramework)' == 'netstandard2.1' dotnet $(SolutionDir)IncVersion\IncVersion.dll $(ProjectDir)$(ProjectFileName) --revision" />
  </Target>
</Project>