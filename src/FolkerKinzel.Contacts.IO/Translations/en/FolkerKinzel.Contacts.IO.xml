<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>FolkerKinzel.Contacts.IO</name>
  </assembly>
  <members>
    <member name="T:FolkerKinzel.Contacts.IO.ContactCollectionExtension">
      <summary>Extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;Contact?&gt;</see>.</summary>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactCollectionExtension.SaveCsv(System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},System.String,FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)">
      <summary>Saves the content of a collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects as CSV file.</summary>
      <param name="contacts">The collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects to save.</param>
      <param name="fileName">The file path of the CSV file to be created. If the file already exists, it will be overwritten.</param>
      <param name="platform">The platform that the CSV file targets.</param>
      <param name="formatProvider">An object, which provides culture-specific formatting information, or <c>null</c> to automatically choose the most suitable <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="textEncoding">The text encoding to use, or <c>null</c> for UTF-8 with BOM (<see cref="P:System.Text.Encoding.UTF8" />).</param>
      <remarks>The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on every <see cref="T:FolkerKinzel.Contacts.Contact" /> object in <paramref name="contacts" />.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contacts" /> or <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="platform" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">I/O error.</exception>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactCollectionExtension.SaveVcf(System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},System.String,FolkerKinzel.Contacts.IO.VCardVersion)">
      <summary>Saves the contents of a collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects as a single VCF file.</summary>
      <param name="contacts">The collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects to be saved. The collection may be empty or contain <c>null</c> values. If the collection does not contain an <see cref="T:FolkerKinzel.Contacts.Contact" /> object that contains data, no file is created.</param>
      <param name="fileName">The file path of the VCF file. If the file already exists, it will be overwritten.</param>
      <param name="version">File version of the vCard file (*.vcf) to be saved.</param>
      <remarks>The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on every <see cref="T:FolkerKinzel.Contacts.Contact" /> object in <paramref name="contacts" />.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contacts" /> or <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="version" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.ContactExtension">
      <summary>Extension methods for the <see cref="T:FolkerKinzel.Contacts.Contact" /> class.</summary>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactExtension.SaveCsv(FolkerKinzel.Contacts.Contact,System.String,FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)">
      <summary>Saves the content of a <see cref="T:FolkerKinzel.Contacts.Contact" /> object as CSV file.</summary>
      <remarks>
        <para>
 The method creates a new CSV file with every call. (If you have to save several <see cref="T:FolkerKinzel.Contacts.Contact" /> objects in a common CSV file, <see cref="M:FolkerKinzel.Contacts.IO.ContactPersistence.SaveCsv(System.String,System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)" /> or the extension method <see cref="M:FolkerKinzel.Contacts.IO.ContactCollectionExtension.SaveCsv(System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},System.String,FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)" /> is suitable for your purposes.)
</para>
        <para>
The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on <paramref name="contact" />. If the property <see cref="P:FolkerKinzel.Contacts.Contact.IsEmpty" /> of <paramref name="contact" /> then returns <c>true</c>, an empty file is created. If it is undesirable for the method  to change <paramref name="contact" /> by calling <see cref="M:FolkerKinzel.Contacts.Contact.Clean" />, you can create beforehand a copy of <paramref name="contact" /> with <see cref="M:FolkerKinzel.Contacts.Contact.Clone" /> and transfer then the copy as argument.
</para>
      </remarks>
      <param name="contact">The <see cref="T:FolkerKinzel.Contacts.Contact" /> object to save.</param>
      <param name="fileName">The file path of the CSV file to be created. If the file already exists, it will be overwritten.</param>
      <param name="platform">The platform that the CSV file targets.</param>
      <param name="formatProvider">An object, that provides culture-specific formatting information, or <c>null</c> to automatically choose the most suitable <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="textEncoding">The text encoding to use or <c>null</c> for UTF-8 with BOM (<see cref="P:System.Text.Encoding.UTF8" />).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contact" /> or <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="platform" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">I/O error</exception>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactExtension.SaveVcf(FolkerKinzel.Contacts.Contact,System.String,FolkerKinzel.Contacts.IO.VCardVersion)">
      <summary>Saves the content of a <see cref="T:FolkerKinzel.Contacts.Contact" /> object as a vCard file (*.vcf).</summary>
      <param name="contact">The <see cref="T:FolkerKinzel.Contacts.Contact" /> object to be saved. If <paramref name="contact" /> is <c>null</c> or contains no data, no file is created.</param>
      <param name="fileName">The file path of the vCard file (*.vcf) to be created. If the file already exists, it will be overwritten.</param>
      <param name="version">File version of the vCard file (*.vcf) to be saved.</param>
      <remarks>
        <para>
The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on <paramref name="contact" />. If the property <see cref="P:FolkerKinzel.Contacts.Contact.IsEmpty" /> of <paramref name="contact" /> then returns <c>true</c>, no file is created. If it is undesirable for the method  to change <paramref name="contact" /> by calling <see cref="M:FolkerKinzel.Contacts.Contact.Clean" />, you can create beforehand a copy of <paramref name="contact" /> with <see cref="M:FolkerKinzel.Contacts.Contact.Clone" /> and transfer the copy as argument. 
</para>
        <para>
For storing several <see cref="T:FolkerKinzel.Contacts.Contact" /> objects in a single VCF file the method <see cref="M:FolkerKinzel.Contacts.IO.ContactPersistence.SaveVcf(System.String,System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},FolkerKinzel.Contacts.IO.VCardVersion)" /> and the extension method  are suitable <see cref="M:FolkerKinzel.Contacts.IO.ContactCollectionExtension.SaveVcf(System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},System.String,FolkerKinzel.Contacts.IO.VCardVersion)" />. </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contact" /> or <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="version" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.ContactPersistence">
      <summary>Static class for loading and saving <see cref="T:FolkerKinzel.Contacts.Contact" /> objects as vCard (*.vcf) or CSV.</summary>
      <example>
        <note type="important"> For the sake of better readability, the examples do not contain any exception handling. </note>
        <para> Initializing <see cref="T:FolkerKinzel.Contacts.Contact" /> objects: </para>
        <code language="cs" source="..\Examples\ContactExample.cs" />
        <para> Reading and writing vCards (* .vcf): </para>
        <code language="cs" source="..\Examples\VCardExample.cs" />
        <para> Reading and writing CSV files: </para>
        <code language="cs" source="..\Examples\CsvExample.cs" />
      </example>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactPersistence.LoadCsv(System.String,FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)">
      <summary>Loads the content of a CSV file as a generic <see cref="T:System.Collections.Generic.List`1">List</see> of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects.</summary>
      <param name="fileName">The file path of the CSV file.</param>
      <param name="platform">The platform from which the CSV file comes.</param>
      <param name="formatProvider">An object, that provides culture-specific formatting information, or <c>null</c> to automatically choose the most suitable <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="textEncoding">The text encoding to use or <c>null</c> for UTF-8 with BOM (<see cref="P:System.Text.Encoding.UTF8" />).</param>
      <returns>The contents of the CSV file as a generic <see cref="T:System.Collections.Generic.List`1">List</see> of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects.</returns>
      <remarks>The method executes <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on each returned <see cref="T:FolkerKinzel.Contacts.Contact" /> object. Therefore it is usually not necessary to call <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> in your own code.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="platform" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">
        <para> The file cannot be accessed </para>
        <para> - or - </para>
        <para> the file contains invalid CSV. </para>
      </exception>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactPersistence.SaveCsv(System.String,System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},FolkerKinzel.Contacts.IO.CsvCompatibility,System.IFormatProvider,System.Text.Encoding)">
      <summary>Saves the content of a collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects as CSV file.</summary>
      <param name="fileName">The file path of the CSV file to be created. If the file already exists, it will be overwritten.</param>
      <param name="contacts">
        <para> The collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects to be saved. </para>
        <para> The collection can be empty or contain <c>null</c> values. If the collection does not contain an <see cref="T:FolkerKinzel.Contacts.Contact" /> object that contains data, an empty file is created. </para>
      </param>
      <param name="platform">The platform that the CSV file targets.</param>
      <param name="formatProvider">An object, that provides culture-specific formatting information, or <c>null</c> to automatically choose the most suitable <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="textEncoding">The text encoding to use or <c>null</c> for UTF-8 with BOM (<see cref="P:System.Text.Encoding.UTF8" />).</param>
      <remarks>
        <para> 
The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on all <see cref="T:FolkerKinzel.Contacts.Contact" /> objects that are passed as an argument. All <see cref="T:FolkerKinzel.Contacts.Contact" /> objects whose property <see cref="P:FolkerKinzel.Contacts.Contact.IsEmpty" /> then returns <c>true</c> are not written to the file. 
</para>
        <para>
If it is undesirable that the method can change the <see cref="T:FolkerKinzel.Contacts.Contact" /> objects by calling <see cref="M:FolkerKinzel.Contacts.Contact.Clean" />, make copies of the <see cref="T:FolkerKinzel.Contacts.Contact" /> objects beforehand with <see cref="M:FolkerKinzel.Contacts.Contact.Clone" /> and then transfer the copies to the method. </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> or <paramref name="contacts" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="platform" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">I/O error</exception>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactPersistence.LoadVcf(System.String)">
      <summary>Loads the content of a VCF file (vCard) as a generic <see cref="T:System.Collections.Generic.List`1">List</see> of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects. (A VCF file can contain multiple vCards attached to each other.)</summary>
      <param name="fileName">The file path of the VCF file.</param>
      <returns>The loaded data as <see cref="T:System.Collections.Generic.List`1" /> of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects. If the file contains no text, an empty list is returned.</returns>
      <remarks>The method executes <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on each returned <see cref="T:FolkerKinzel.Contacts.Contact" /> object. Therefore it is usually not necessary to call <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> in your own code.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is not a valid file path.</exception>
      <exception cref="T:System.IO.IOException">The file could not be loaded.</exception>
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.ContactPersistence.SaveVcf(System.String,System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},FolkerKinzel.Contacts.IO.VCardVersion)">
      <summary>Saves the contents of a collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects as a single VCF file.</summary>
      <param name="fileName">The file path of the vCard file (*.vcf) to be created. If the file already exists, it will be overwritten.</param>
      <param name="contacts">
        <para> The collection of <see cref="T:FolkerKinzel.Contacts.Contact" /> objects to be saved. </para>
        <para> The collection may be empty or may contain <c>null</c> values. If the collection does not contain any <see cref="T:FolkerKinzel.Contacts.Contact" /> object that contains data, no file is created. </para>
      </param>
      <param name="version">File version of the vCard file (*.vcf) to be saved.</param>
      <remarks>
        <para> 
The method calls <see cref="M:FolkerKinzel.Contacts.Contact.Clean" /> on all <see cref="T:FolkerKinzel.Contacts.Contact" /> objects that are passed as an argument. All <see cref="T:FolkerKinzel.Contacts.Contact" /> objects whose property <see cref="P:FolkerKinzel.Contacts.Contact.IsEmpty" /> then returns <c>true</c> are not written to the file. 
</para>
        <para>
If it is undesirable that the method can change the <see cref="T:FolkerKinzel.Contacts.Contact" /> objects by calling <see cref="M:FolkerKinzel.Contacts.Contact.Clean" />, make copies of the <see cref="T:FolkerKinzel.Contacts.Contact" /> objects beforehand with <see cref="M:FolkerKinzel.Contacts.Contact.Clone" /> and then transfer the copies to the method.
</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contacts" /> or <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="fileName" /> is not a valid file path. </para>
        <para> - or - </para>
        <para>
          <paramref name="version" /> has an undefined value. </para>
      </exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.CsvCompatibility">
      <summary>Named constants to specify the target platform of a CSV file.</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.CsvCompatibility.Unspecified">
      <summary>Unspecified</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.CsvCompatibility.Outlook">
      <summary>Microsoft Outlook</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.CsvCompatibility.Google">
      <summary>Google Contacts</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.CsvCompatibility.Thunderbird">
      <summary>Mozilla Thunderbird</summary>
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.DisplayName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.FirstName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.MiddleName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.LastName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.NamePrefix">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.NameSuffix">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.NickName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Gender">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.BirthDay">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Spouse">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Anniversary">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressHomeStreet">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressHomePostalCode">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressHomeCity">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressHomeState">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressHomeCountry">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email1">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email2">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email3">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email4">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email5">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Email6">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneHome">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneWork">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.FaxHome">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.FaxWork">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Cell">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.CellWork">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther1">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther2">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther3">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther4">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther5">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.PhoneOther6">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger1">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger2">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger3">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger4">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger5">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.InstantMessenger6">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.HomePagePersonal">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.HomePageWork">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.WorkCompany">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.WorkDepartment">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.WorkOffice">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.WorkPosition">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressWorkStreet">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressWorkPostalCode">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressWorkCity">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressWorkState">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.AddressWorkCountry">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.Comment">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp.TimeStamp">
      <summary />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.CsvIOBase._propInfo">
      <summary />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Csv.CsvIOBase.CreateMapping">
      <summary />
      <returns />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Csv.CsvIOBase.InitCsvRecordWrapper(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Nullable{FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp},System.Collections.Generic.IList{System.String}}})">
      <summary />
      <param name="mapping" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Csv.CsvIOBase.InitCsvRecordWrapperUndefinedValues(System.Tuple{System.String,System.Nullable{FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp},System.Collections.Generic.IList{System.String}},FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper)">
      <summary />
      <param name="tpl" />
      <param name="wrapper" />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Csv.CsvReader.Read(System.String)">
      <summary />
      <param name="fileName" />
      <returns />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:System.IO.IOException" />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Csv.CsvReader.InitContact(FolkerKinzel.CsvTools.Helpers.CsvRecordWrapper,System.Collections.Generic.IList{System.Tuple{System.String,System.Nullable{FolkerKinzel.Contacts.IO.Intls.Csv.ContactProp},System.Collections.Generic.IList{System.String}}})">
      <summary />
      <param name="wrapper" />
      <param name="mapping" />
      <returns />
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.Intls.Csv.Google.AdditionalProp.Swap">
      <summary />
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.Intls.Csv.SexConverter">
      <summary />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Vcf.VcfReader.Read(System.String)">
      <summary />
      <param name="fileName" />
      <returns />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:System.IO.IOException" />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Vcf.VcfWriter.Write(FolkerKinzel.Contacts.Contact,System.String,FolkerKinzel.Contacts.IO.VCardVersion)">
      <summary />
      <param name="contact" />
      <param name="fileName" />
      <param name="version" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:System.IO.IOException" />
    </member>
    <member name="M:FolkerKinzel.Contacts.IO.Intls.Vcf.VcfWriter.Write(System.Collections.Generic.IEnumerable{FolkerKinzel.Contacts.Contact},System.String,FolkerKinzel.Contacts.IO.VCardVersion)">
      <summary />
      <param name="contacts" />
      <param name="fileName" />
      <param name="version" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:System.IO.IOException" />
      <remarks />
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.Resources.Res">
      <summary />
    </member>
    <member name="P:FolkerKinzel.Contacts.IO.Resources.Res.ResourceManager">
      <summary />
    </member>
    <member name="P:FolkerKinzel.Contacts.IO.Resources.Res.Culture">
      <summary />
    </member>
    <member name="P:FolkerKinzel.Contacts.IO.Resources.Res.UndefinedEnumValue">
      <summary />
    </member>
    <member name="T:FolkerKinzel.Contacts.IO.VCardVersion">
      <summary>Named constants to indicate the VCF version.</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.VCardVersion.V2_1">
      <summary>vCard 2.1</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.VCardVersion.V3_0">
      <summary>vCard 3.0</summary>
    </member>
    <member name="F:FolkerKinzel.Contacts.IO.VCardVersion.V4_0">
      <summary>vCard 4.0</summary>
    </member>
  </members>
</doc>